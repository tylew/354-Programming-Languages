-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from ParNumbers.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExp -> Exp                                 (0)
	%start_pExp1 -> Exp1                               (1)
	%start_pExp2 -> Exp2                               (2)
	%start_pExp4 -> Exp4                               (3)
	%start_pExp5 -> Exp5                               (4)
	%start_pExp6 -> Exp6                               (5)
	%start_pExp3 -> Exp3                               (6)
	Integer -> L_integ                                 (7)
	Exp -> Exp '+' Exp1                                (8)
	Exp -> Exp '-' Exp1                                (9)
	Exp -> Exp1                                        (10)
	Exp1 -> Exp1 '*' Exp2                              (11)
	Exp1 -> Exp1 '/' Exp2                              (12)
	Exp1 -> Exp2                                       (13)
	Exp2 -> Exp3 '^' Exp2                              (14)
	Exp2 -> Exp3                                       (15)
	Exp4 -> Exp4 'op1' Exp5                            (16)
	Exp4 -> Exp5                                       (17)
	Exp5 -> Exp5 'op2' Exp6                            (18)
	Exp5 -> Exp6                                       (19)
	Exp6 -> '-' Exp6                                   (20)
	Exp6 -> Integer                                    (21)
	Exp6 -> '(' Exp ')'                                (22)
	Exp3 -> Exp4                                       (23)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	'-'            { PT _ (TS _ 5) }
	'/'            { PT _ (TS _ 6) }
	'^'            { PT _ (TS _ 7) }
	'op1'          { PT _ (TS _ 8) }
	'op2'          { PT _ (TS _ 9) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExp     rule  0
	%start_pExp1    rule  1
	%start_pExp2    rule  2
	%start_pExp4    rule  3
	%start_pExp5    rule  4
	%start_pExp6    rule  5
	%start_pExp3    rule  6
	Integer         rule  7
	Exp             rules 8, 9, 10
	Exp1            rules 11, 12, 13
	Exp2            rules 14, 15
	Exp4            rules 16, 17
	Exp5            rules 18, 19
	Exp6            rules 20, 21, 22
	Exp3            rule  23

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp            goto state 23
	Exp1           goto state 24
	Exp2           goto state 22
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 1


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp1           goto state 21
	Exp2           goto state 22
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 2


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp2           goto state 19
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 3


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp4           goto state 18
	Exp5           goto state 11
	Exp6           goto state 12

State 4


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp5           goto state 17
	Exp6           goto state 12

State 5


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp6           goto state 16

State 6


	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 13

State 7


	L_integ        shift, and enter state 8


State 8

	Integer -> L_integ .                                (rule 7)

	')'            reduce using rule 7
	'*'            reduce using rule 7
	'+'            reduce using rule 7
	'-'            reduce using rule 7
	'/'            reduce using rule 7
	'^'            reduce using rule 7
	'op1'          reduce using rule 7
	'op2'          reduce using rule 7
	%eof           reduce using rule 7


State 9

	Exp6 -> Integer .                                   (rule 21)

	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	'^'            reduce using rule 21
	'op1'          reduce using rule 21
	'op2'          reduce using rule 21
	%eof           reduce using rule 21


State 10

	Exp4 -> Exp4 . 'op1' Exp5                           (rule 16)
	Exp3 -> Exp4 .                                      (rule 23)

	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	'^'            reduce using rule 23
	'op1'          shift, and enter state 30
	%eof           reduce using rule 23


State 11

	Exp4 -> Exp5 .                                      (rule 17)
	Exp5 -> Exp5 . 'op2' Exp6                           (rule 18)

	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'/'            reduce using rule 17
	'^'            reduce using rule 17
	'op1'          reduce using rule 17
	'op2'          shift, and enter state 31
	%eof           reduce using rule 17


State 12

	Exp5 -> Exp6 .                                      (rule 19)

	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'/'            reduce using rule 19
	'^'            reduce using rule 19
	'op1'          reduce using rule 19
	'op2'          reduce using rule 19
	%eof           reduce using rule 19


State 13

	%start_pExp3 -> Exp3 .                              (rule 6)

	%eof           accept


State 14

	Exp6 -> '(' . Exp ')'                               (rule 22)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp            goto state 33
	Exp1           goto state 24
	Exp2           goto state 22
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 15

	Exp6 -> '-' . Exp6                                  (rule 20)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp6           goto state 32

State 16

	%start_pExp6 -> Exp6 .                              (rule 5)

	%eof           accept


State 17

	%start_pExp5 -> Exp5 .                              (rule 4)
	Exp5 -> Exp5 . 'op2' Exp6                           (rule 18)

	'op2'          shift, and enter state 31
	%eof           accept


State 18

	%start_pExp4 -> Exp4 .                              (rule 3)
	Exp4 -> Exp4 . 'op1' Exp5                           (rule 16)

	'op1'          shift, and enter state 30
	%eof           accept


State 19

	%start_pExp2 -> Exp2 .                              (rule 2)

	%eof           accept


State 20

	Exp2 -> Exp3 . '^' Exp2                             (rule 14)
	Exp2 -> Exp3 .                                      (rule 15)

	')'            reduce using rule 15
	'*'            reduce using rule 15
	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'/'            reduce using rule 15
	'^'            shift, and enter state 29
	%eof           reduce using rule 15


State 21

	%start_pExp1 -> Exp1 .                              (rule 1)
	Exp1 -> Exp1 . '*' Exp2                             (rule 11)
	Exp1 -> Exp1 . '/' Exp2                             (rule 12)

	'*'            shift, and enter state 25
	'/'            shift, and enter state 26
	%eof           accept


State 22

	Exp1 -> Exp2 .                                      (rule 13)

	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'/'            reduce using rule 13
	%eof           reduce using rule 13


State 23

	%start_pExp -> Exp .                                (rule 0)
	Exp -> Exp . '+' Exp1                               (rule 8)
	Exp -> Exp . '-' Exp1                               (rule 9)

	'+'            shift, and enter state 27
	'-'            shift, and enter state 28
	%eof           accept


State 24

	Exp -> Exp1 .                                       (rule 10)
	Exp1 -> Exp1 . '*' Exp2                             (rule 11)
	Exp1 -> Exp1 . '/' Exp2                             (rule 12)

	')'            reduce using rule 10
	'*'            shift, and enter state 25
	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'/'            shift, and enter state 26
	%eof           reduce using rule 10


State 25

	Exp1 -> Exp1 '*' . Exp2                             (rule 11)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp2           goto state 41
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 26

	Exp1 -> Exp1 '/' . Exp2                             (rule 12)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp2           goto state 40
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 27

	Exp -> Exp '+' . Exp1                               (rule 8)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp1           goto state 39
	Exp2           goto state 22
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 28

	Exp -> Exp '-' . Exp1                               (rule 9)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp1           goto state 38
	Exp2           goto state 22
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 29

	Exp2 -> Exp3 '^' . Exp2                             (rule 14)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp2           goto state 37
	Exp4           goto state 10
	Exp5           goto state 11
	Exp6           goto state 12
	Exp3           goto state 20

State 30

	Exp4 -> Exp4 'op1' . Exp5                           (rule 16)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp5           goto state 36
	Exp6           goto state 12

State 31

	Exp5 -> Exp5 'op2' . Exp6                           (rule 18)

	'('            shift, and enter state 14
	'-'            shift, and enter state 15
	L_integ        shift, and enter state 8

	Integer        goto state 9
	Exp6           goto state 35

State 32

	Exp6 -> '-' Exp6 .                                  (rule 20)

	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	'^'            reduce using rule 20
	'op1'          reduce using rule 20
	'op2'          reduce using rule 20
	%eof           reduce using rule 20


State 33

	Exp -> Exp . '+' Exp1                               (rule 8)
	Exp -> Exp . '-' Exp1                               (rule 9)
	Exp6 -> '(' Exp . ')'                               (rule 22)

	')'            shift, and enter state 34
	'+'            shift, and enter state 27
	'-'            shift, and enter state 28


State 34

	Exp6 -> '(' Exp ')' .                               (rule 22)

	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	'^'            reduce using rule 22
	'op1'          reduce using rule 22
	'op2'          reduce using rule 22
	%eof           reduce using rule 22


State 35

	Exp5 -> Exp5 'op2' Exp6 .                           (rule 18)

	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	'^'            reduce using rule 18
	'op1'          reduce using rule 18
	'op2'          reduce using rule 18
	%eof           reduce using rule 18


State 36

	Exp4 -> Exp4 'op1' Exp5 .                           (rule 16)
	Exp5 -> Exp5 . 'op2' Exp6                           (rule 18)

	')'            reduce using rule 16
	'*'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'/'            reduce using rule 16
	'^'            reduce using rule 16
	'op1'          reduce using rule 16
	'op2'          shift, and enter state 31
	%eof           reduce using rule 16


State 37

	Exp2 -> Exp3 '^' Exp2 .                             (rule 14)

	')'            reduce using rule 14
	'*'            reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'/'            reduce using rule 14
	%eof           reduce using rule 14


State 38

	Exp -> Exp '-' Exp1 .                               (rule 9)
	Exp1 -> Exp1 . '*' Exp2                             (rule 11)
	Exp1 -> Exp1 . '/' Exp2                             (rule 12)

	')'            reduce using rule 9
	'*'            shift, and enter state 25
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'/'            shift, and enter state 26
	%eof           reduce using rule 9


State 39

	Exp -> Exp '+' Exp1 .                               (rule 8)
	Exp1 -> Exp1 . '*' Exp2                             (rule 11)
	Exp1 -> Exp1 . '/' Exp2                             (rule 12)

	')'            reduce using rule 8
	'*'            shift, and enter state 25
	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'/'            shift, and enter state 26
	%eof           reduce using rule 8


State 40

	Exp1 -> Exp1 '/' Exp2 .                             (rule 12)

	')'            reduce using rule 12
	'*'            reduce using rule 12
	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'/'            reduce using rule 12
	%eof           reduce using rule 12


State 41

	Exp1 -> Exp1 '*' Exp2 .                             (rule 11)

	')'            reduce using rule 11
	'*'            reduce using rule 11
	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'/'            reduce using rule 11
	%eof           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 24
Number of terminals: 10
Number of non-terminals: 15
Number of states: 42
